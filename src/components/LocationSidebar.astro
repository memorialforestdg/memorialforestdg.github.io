---
/* eslint-disable astro/no-set-html-directive */

import { Icon } from "astro-icon/components";

function isHttpOrHttpsUrl(url: string): boolean {
  return url.startsWith("http://") || url.startsWith("https://");
}

function isValidW3WFormat(w3w: string): boolean {
  // Less then 64 characters and three words separated by dots.
  return w3w.length < 64 && /^[a-zA-Z]+\.[a-zA-Z]+\.[a-zA-Z]+$/.test(w3w);
}

function isValidColorFormat(color: string | undefined): boolean {
  // Assuming the color format is like --example-color, adjust regex as needed.
  return color === undefined || /^--[\w-]+$/.test(color);
}

type Word = string; // Placeholder, can't enforce alphabet characters only
export type W3WFormat = `${Word}.${Word}.${Word}`;

type ValidUrl = Props & { url: string } & {
  url: ReturnType<typeof isHttpOrHttpsUrl> extends true ? string : undefined;
};

interface Props {
  bgColor?: `--${string}`;
  textColor?: `--${string}`;
  w3w: W3WFormat;
  lat: number;
  lon: number;
  address?: string;
  partners?: string;
  website?: ValidUrl;
  phone?: string;
  hours?: string;
  tickets?: string;
  food?: string;
  bathrooms?: string;
  accessible?: string;
  transport?: string;
  bicycles?: string;
  parking?: string;
  siteInfo?: string;
  locProviso?: string;
}

const {
  bgColor,
  textColor,
  w3w,
  lat,
  lon,
  address,
  website,
  phone,
  partners,
  hours,
  tickets,
  food,
  bathrooms,
  accessible,
  transport,
  bicycles,
  parking,
  siteInfo,
  locProviso = `Opening times and access information may change. Please visit the site partner website listed above or phone ahead for updated information.`,
} = Astro.props;

// Validate w3w format
if (!isValidW3WFormat(w3w)) {
  throw new Error(
    `Invalid w3w format (should be three words, seperated buy dots): ${w3w}`,
  );
}

// Validate bgColor and textColor formats
if (!isValidColorFormat(bgColor)) {
  throw new Error(`Invalid css property format for bgColor: ${bgColor}`);
}

if (!isValidColorFormat(textColor)) {
  throw new Error(`Invalid css property format for textColor: ${textColor}`);
}

const bgColorVar = `var(${bgColor})`;
const textColorVar = `var(${textColor})`;
---

<section class="location__sidebar poly-1 mw-100">
  <div class="location__sidebar--content ma-2 ma-4-ns">
    <h2 class="f2 sans">Getting There</h2>
    <ul
      class="list location__sidebar--list grid gap-2 justify-self-start items-start pa-0"
    >
      <li class="info-item maps justify-self-start">
        <Icon name="material-symbols-light:map-sharp" />
        <ul class="map-items list grid justify-self-start pa-0">
          {
            w3w && (
              <li class="w3w">
                <strong>What 3 Words:</strong>{" "}
                <a
                  class="di-underline-hover"
                  href={`https://w3w.co/${w3w}`}
                  target="_blank"
                >
                  ///{w3w}
                </a>
                <Icon name="material-symbols-light:open-in-new" />
              </li>
            )
          }
          <li class="google-maps">
            <strong>Google Maps:</strong>
            <a
              class="di-underline-hover"
              href={`https://www.google.com/maps/dir/?api=1&destination=${lat}+${lon}`}
              target="_blank"
            >
              {lat}, {lon}
            </a>
            <Icon name="material-symbols-light:open-in-new" />
          </li>
          <!-- <li class="open-street-map">
            <strong>Open Street Map:</strong>
            <a
              class="di-underline-hover"
              href={`https://www.openstreetmap.org/?mlat=${lat}&mlon=${lon}&map=18/${lat}/${lon}&layers=H`}
              target="_blank">{lat}, {lon}</a
            >
            <Icon name="material-symbols-light:open-in-new" />
          </li> -->
        </ul>
      </li>
      <li class="w-100">
        <address>
          <ul class="list ma-0 grid gap-2 pa-0">
            {
              address && (
                <li class="info-item address m">
                  <Icon name="material-symbols-light:location-on-outline" />
                  <div class="item-subject" set:html={address} />
                </li>
              )
            }
            {
              website && (
                <li class="info-item website">
                  <Icon name="material-symbols-light:globe-uk-sharp" />
                  <div class="item-subject">
                    <a
                      class="di-underline-hover"
                      href={website}
                      target="_blank"
                    >
                      {website}
                    </a>
                    <Icon name="material-symbols-light:open-in-new" />
                  </div>
                </li>
              )
            }
            {
              phone && (
                <li class="info-item phone">
                  <Icon name="material-symbols-light:call" />
                  <div class="item-subject">
                    <a class="di-underline-hover" href={`tel:${phone}`}>
                      {phone}
                    </a>
                  </div>
                </li>
              )
            }
          </ul>
        </address>
      </li>

      {
        hours && (
          <li class="info-item hours">
            <Icon name="material-symbols-light:nest-clock-farsight-analog-outline" />
            <div class="item-subject" set:html={hours} />
          </li>
        )
      }
      {
        tickets && (
          <li class="info-item tickets">
            <Icon name="ion:ticket" />
            <div class="item-subject" set:html={tickets} />
          </li>
        )
      }
      {
        food && (
          <li class="info-item food">
            <Icon name="material-symbols-light:coffee-rounded" />
            <div class="item-subject" set:html={food} />
          </li>
        )
      }
      {
        bathrooms && (
          <li class="info-item bathrooms">
            <Icon name="material-symbols-light:family-restroom-rounded" />
            <div class="item-subject" set:html={bathrooms} />
          </li>
        )
      }
      {
        accessible && (
          <li class="info-item accessible">
            <Icon name="material-symbols-light:accessible-forward-rounded" />
            <div class="item-subject" set:html={accessible} />
          </li>
        )
      }
      {
        parking && (
          <li class="info-item parking">
            <Icon name="material-symbols-light:local-parking-rounded" />
            <div class="item-subject" set:html={parking} />
          </li>
        )
      }
      {
        transport && (
          <li class="info-item transport">
            <Icon name="material-symbols-light:train-outline" />
            <div class="item-subject" set:html={transport} />
          </li>
        )
      }
      {
        bicycles && (
          <li class="info-item bicycles">
            <Icon name="material-symbols-light:directions-bike" />
            <div class="item-subject" set:html={bicycles} />
          </li>
        )
      }
      {
        partners && (
          <li class="info-item partners">
            <Icon name="material-symbols-light:handshake-outline" />
            <div class="item-subject" set:html={partners} />
          </li>
        )
      }
      {
        siteInfo && (
          <li class="info-item site-info">
            <Icon name="material-symbols-light:info-outline" />
            <div class="item-subject">
              <span set:html={siteInfo} />
            </div>
          </li>
        )
      }
      {
        locProviso && (
          <li class="info-item proviso">
            <Icon name="material-symbols-light:release-alert-outline-rounded" />
            <div class="item-subject">
              <i class="f6 dib word-wrap" set:html={locProviso} />
            </div>
          </li>
        )
      }
    </ul>
  </div>
</section>
<style define:vars={{ bgColorVar, textColorVar }}>
  li {
    padding: 0;
  }

  .location__sidebar {
    padding: 1rem;
    color: var(--textColorVar, var(--brand-lt));
    background-color: var(--bgColorVar, var(--brand-dk));
  }

  a {
    word-wrap: break-word;
  }

  [data-icon] {
    width: 30px;
    height: 30px;
    color: var(--brand-lt);
  }

  a + [data-icon] {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    color: var(--brand-lt);
    font-size: 1rem;
    margin-block-end: -2px;
  }

  a,
  a:visited {
    color: currentcolor;
  }

  .location__sidebar--list {
    /* display: grid; */
    grid-template-columns: 1fr;

    /* justify-items: self-start;
    align-items: center; */
  }

  .info-item {
    display: grid;
    grid-template-columns: minmax(0, 30px) minmax(0, 1fr);
    place-items: start start;
    width: 100%;
    column-gap: 0.8rem;
  }

  .info-item:not(.maps) > *:first-child {
    margin-block-start: 0.5rem;
  }

  .item-subject {
    width: 100%;
    padding-block-start: 0.5rem;
    border-block-start: 1px solid var(--white-o-20);
  }

  .map-items {
    margin: 0;
  }

  .w3w a {
    hyphens: auto;
  }
</style>
