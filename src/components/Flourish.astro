---
import type {ImageMetadata} from 'astro'
import {getImage} from 'astro:assets'

/**
 * Floursish component
 * Add flourish images from the `/src/images/flourishes` folder as css props, used in background images.
 *
 * All this to load the correct urls so they can be used in CSS custom-properites on backgrounds. :S
 *
 * NOTE:The style declrations are added manually at this time.
 * If you add an image to the `/src/images/flourishes` folder you must also manually add it to the style secetion below.
 *
 */

interface Props {
  classes?: Array<string>
}
// User defined classes
const {classes = []} = Astro.props

// Location of the flourish images
const images = import.meta.glob<{default: ImageMetadata}>(
  '/src/images/flourishes/*.{jpeg,jpg,JPG,png,gif,avif,webp}'
)

// Defaults
const opts = {
  quality: 80,
  decoding: 'async',
  loading: 'lazy',
  width: 150,
  height: 150
}

/**
 * Use Astro getImage to generate new images from the source and provided options.
 *
 * @param {ImageMetadata} img
 * @param {String: "jpeg" | "jpg" | "JPG" | "png" | "gif" | "avif" | "webp"} format
 * @param {Object} opts
 */
async function generateImage(img, format, opts) {
  const {decoding, loading, quality, width, height} = opts

  return await getImage({
    src: img(),
    width,
    height,
    decoding,
    loading,
    quality,
    format
  })
}

// Generate the images and prop strings
const cssProps = await Promise.all(
  Object.entries(images).map(async ([key, image]) => {
    const filename = key
      .split('/')
      .pop()
      ?.split('.')
      .slice(0, -1)
      .join('.')
      .toLocaleLowerCase()

    // const avifImage = await generateImage(image, 'avif', opts)
    const webpImage = await generateImage(image, 'webp', opts)
    const pngImage = await generateImage(image, 'png', opts)

    // For browsers that can handel image-set.
    // Safari 17.5 has difficulty it will select the avif, but not display it :(
    // Safari pre 17.5 must have a resolution, and no type declaration.
    // url(${avifImage.src}) type("image/avif"),

    const imageSet = `
    --${filename}:
      -webkit-image-set(
        url(${webpImage.src}) 1x type("image/webp"),
        url(${pngImage.src})  1x type("image/png")
      ),
      image-set(
        url(${webpImage.src}) 1x type("image/webp"),
        url(${pngImage.src})  1x type("image/png")
      );`
    // For browsers that cannna handel image-set.
    const fallback = `
    --${filename}-fb : url(${pngImage.src});`

    return `${fallback} ${imageSet}` //
  })
)
---

<!-- The custom properties will be available to all descendants. -->
<div class={`flourish ${classes.join(' ')}`}>
  <slot />
</div>

<style is:global define:vars={{cssProps}}>
  .flourish {
    position: relative;
    z-index: 0;
    background: transparent;
  }

  .flourish > p:first-of-type {
    position: relative;
    background-color: transparent;
  }

  .flourish > p:first-of-type::before {
    position: absolute;
    z-index: -1;
    display: block;
    background-repeat: no-repeat;
    background-size: cover;
    opacity: 0.75;
    transition: transform 0.5s ease-in-out;
    content: '';
    inset-block-start: -1.5rem;
    inline-size: 100px;
    block-size: 100px;
    inset-inline-start: calc(var(--fluid-base) * -2.5);
  }

  /*
    The css custom props are generated on the fly by the Flourish component, but you have to manually assign threm below to clases below.
    In some respects this is good, as you can finesse the position ect for each image.
  */

  /* stylelint-disable declaration-block-no-duplicate-properties */

  .flourish.--alder > p:first-of-type::before {
    background-image: var(--alder-fb);
    background-image: var(--alder);
    transform: rotate(-20deg);
    content: '' / 'Decorative illustrated flourish of an  Alder leaf.';
  }

  .flourish.--apple > p:first-of-type::before {
    background-image: var(--apple-fb);
    background-image: var(--apple);
    transform: rotate(10deg);
    opacity: 0.65;
    content: '' /
      'Decorative illustrated flourish of an Apple branch with leaves and fruit.';
  }

  .flourish.--aspen > p:first-of-type::before {
    background-image: var(--aspen-fb);
    background-image: var(--aspen);
    transform: rotate(20deg);
    content: '' / 'Decorative illustrated flourish of an Aspen leaf.';
    inset-block-start: -2rem;
    inset-inline-start: calc(var(--fluid-base) * -3);
  }

  .flourish.--beech > p:first-of-type::before {
    background-image: var(--beech-fb);
    background-image: var(--beech);
    transform: rotate(20deg);
    content: '' / 'Decorative illustrated flourish of a Beech leaf.';
  }

  .flourish.--downybirch > p:first-of-type::before {
    background-image: var(--downybirch-fb);
    background-image: var(--downybirch);
    transform: rotate(20deg);
    content: '' / 'Decorative illustrated flourish of a Downy Birch leaf.';
    inset-block-start: -2rem;
    inset-inline-start: calc(var(--fluid-base) * -2);
  }

  .flourish.--englishoak > p:first-of-type::before {
    background-image: var(--englishoak-fb);
    background-image: var(--englishoak);
    transform: rotate(20deg);
    content: '' / 'Decorative illustrated flourish of an English Oak leaf.';
  }

  .flourish.--fieldmaple > p:first-of-type::before {
    background-image: var(--fieldmaple-fb);
    background-image: var(--fieldmaple);
    transform: rotate(90deg);
    content: '' / 'Decorative illustrated flourish of a Field Maple leaf.';
  }

  .flourish.--greywillow > p:first-of-type::before {
    background-image: var(--greywillow-fb);
    background-image: var(--greywillow);
    content: '' / 'Decorative illustrated flourish of a Grey Willow leaf.';
    inset-block-start: -2rem;
  }

  .flourish.--hawthorn > p:first-of-type::before {
    background-image: var(--hawthorn-fb);
    background-image: var(--hawthorn);
    transform: rotate(-50deg);
    content: '' / 'Decorative illustrated flourish of a Hawthorn leaf.';
    inset-block-start: -2rem;
  }

  .flourish.--holly > p:first-of-type::before {
    background-image: var(--holly-fb);
    background-image: var(--holly);
    content: '' /
      'Decorative illustrated flourish of a Holly leaf with berries.';
    inset-block-start: -2rem;
    inset-inline-start: calc(var(--fluid-base) * -3);
  }

  .flourish.--horsechestnut > p:first-of-type::before {
    background-image: var(--horsechestnut-fb);
    background-image: var(--horsechestnut);
    transform: rotate(20deg);
    content: '' / 'Decorative illustrated flourish of a Horse Chestnut leaf.';
  }

  .flourish.--rowan-berries > p:first-of-type::before {
    background-image: var(--rowan-berries-fb);
    background-image: var(--rowan-berries);
    transform: rotate(-10deg);
    content: '' / 'Decorative illustrated flourish of Rowan berries.';
    inset-block-start: -1rem;
  }

  .flourish.--rowan-leaves > p:first-of-type::before {
    background-image: var(--rowan-leaves-fb);
    background-image: var(--rowan-leaves);
    content: '' / 'Decorative illustrated flourish of a Rowan leaf.';
    inset-block-start: -1.8rem;
    inset-inline-start: -3rem;
  }

  .flourish.--silverbirch > p:first-of-type::before {
    background-image: var(--silverbirch-fb);
    background-image: var(--silverbirch, --silverbirch-fb);
    transform: rotate(-20deg);
    content: '' / 'Decorative illustrated flourish of a Silver Birch leaf.';
    inset-block-start: -1.8rem;
    inset-inline-start: -3rem;
  }
</style>
