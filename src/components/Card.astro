---
import type {ImageMetadata, GetImageResult} from 'astro'
import {getImage} from 'astro:assets'

interface Props {
  url: string
  imgUrl?: string | ImageMetadata
  mobHW?: [number, number]
  deskHW?: [number, number]
  imgMaxHeight?: string
  mobBkPt?: string
  deskBkPt?: string
  imagePosition?: string
  alt?: string
  title: string
  heading?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'
  footer?: string | HTMLElement | HTMLElement[]
  children?: string | HTMLElement | HTMLElement[]
  wrapClasses?: string
  headerClasses?: string
  headingWrapClasses?: string
  headingClasses?: string
  contentClasses?: string
  footerClasses?: string
}

const {
  url = '#',
  imgUrl = '',
  mobHW = [200, 200],
  deskHW = [300, 300],
  imgMaxHeight = '150px',
  mobBkPt = '(max-width: 799px)',
  deskBkPt = '(min-width: 800px)',
  imagePosition = 'center',
  alt = '',
  title,
  heading = 'h3',
  footer,
  wrapClasses = '',
  headerClasses = '',
  headingWrapClasses = '',
  headingClasses = '',
  contentClasses = '',
  footerClasses = ''
} = Astro.props

const Heading = heading
let imgMobile: GetImageResult
let imgDesktop: GetImageResult

  imgMobile = await getImage({
    src: imgUrl,
    format: 'webp',
    width: mobHW[0],
    height: mobHW[1]
  })

  imgDesktop = await getImage({
    src: imgUrl,
    format: 'webp',
    width: deskHW[0],
    height: deskHW[1]
  })

---

<div class=`card ${wrapClasses}`>
  <header class=`card__head ${headerClasses}`>
    {
      imgDesktop && imgMobile ? (
        <picture>
          <source media={mobBkPt} srcset={imgMobile.src} />
          <source media={deskBkPt} srcset={imgDesktop.src} />
          <img src={imgDesktop.src} alt={alt} />
        </picture>
      ): null
    }
    <div
      class=`card__heading--wrap ${headingWrapClasses}`
    >
      <Heading class=`card__heading ${headingClasses}`>
        <a href={url}>{title}</a>
      </Heading>
    </div>
  </header>
  <div class=`card__content ${contentClasses}`>
    <slot />
  </div>
  {footer ? <footer class=`card__footer ${footerClasses}` set:html={footer} /> : null}
</div>

<style is:global define:vars={{imagePosition, imgMaxHeight}}>
  .card__head {
    max-height: var(--imgMaxHeight);
    overflow: hidden;
    background-color: var(--brand-teal);
  }

  .card__head picture > * {
    width: 200%;
    height: 200%;
    object-fit: none;
    object-position: var(--imagePosition);
  }

  .card__heading--wrap {
    background: var(--header-img-gradent);

    /* inset-block-end: 0; */
  }
</style>
