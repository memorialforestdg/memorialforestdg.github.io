---
import Flourish from '../components/Flourish.astro'
import OpenMap from '../components/OpenMap.astro'
import {type IconType} from '../components/OpenMap.astro'
import BaseLayout from './BaseLayout.astro'
import type {ImageMetadata} from 'astro'
import mapIcon from '../../public/map-pin-trees.svg'
import mapIconShadow from '../../public/map-pin-trees-shadow.png'

interface Props {
  frontmatter: {
    pageTitle: string
    bannerImage?: any
    bannerAlt?: string
    flourishClasses?: Array<string>
    w3w: string
    lat: number
    lon: number
    siteInfo?: string
    webstie?: string
    phone?: string
  }
}

const {frontmatter} = Astro.props
const {
  pageTitle,
  bannerImage,
  bannerAlt,
  flourishClasses,
  w3w,
  lat,
  lon,
  siteInfo,
  webstie,
  phone
} = frontmatter

// https://markjames.dev/blog/dynamically-importing-images-astro
const images = import.meta.glob<{default: ImageMetadata}>(
  '../images/**/*.{png,PNG,jpg,JPG,jpeg,svg,webp,avif}'
)
const banner = images[bannerImage] ? await images[bannerImage]() : (null as any)
const BannerImage = banner.default as ImageMetadata

const iconOpts: IconType = {
  iconUrl: mapIcon.src,
  shadowUrl: mapIconShadow.src,
  iconSize: [80, 77],
  shadowSize: [80, 40],
  shadowAnchor: [0, 8],
  iconAnchor: [12, 41]
}
---

<BaseLayout
  pageTitle={pageTitle}
  bannerImage={BannerImage}
  bannerAlt={bannerAlt}
>
  <main id="main">
    <OpenMap
      id="map"
      lat={lat}
      lon={lon}
      height="300px"
      classes="container"
      controls={false}
      icon={iconOpts}
    />
    <div class="location container full-width">
      <div class="markdown-content measure-3 pt-4">
        <Flourish classes={flourishClasses}>
          <slot />
        </Flourish>
      </div>
    </div>
  </main>
</BaseLayout>

<style is:global>
  #map {
    z-index: 0;
    max-width: calc(var(--width-max-content) - 1.2em);
    border: 1px solid var(--brand-surface-1);
    margin-block-start: calc(-1 * var(--spacing-3));
  }

  @media (max-width: 1500px) {
    #map {
      max-width: calc(var(--width-max-content) - 2.2em);
    }
  }
</style>
